{
    "type": "bundle",
    "id": "bundle--126bad7e-80ae-4a91-b203-01b869e01e18",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--914fea8a-8426-423d-a75a-f40981194dd9",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2021-03-13T20:12:18.238245Z",
            "modified": "2021-03-13T20:12:18.238245Z",
            "name": "CVE-2020-7471",
            "description": "Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2020-7471"
                }
            ],
            "object_marking_refs": [
                "marking-definition--62fd3f9b-15f3-4ebc-802c-91fce9536bcf"
            ]
        }
    ]
}