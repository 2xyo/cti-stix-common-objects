{
    "type": "bundle",
    "id": "bundle--1efa8753-16d0-4997-90c1-f722f2971b79",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--83c46533-14eb-496c-a499-d808b961bf67",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2021-03-13T20:11:41.151263Z",
            "modified": "2021-03-13T20:11:41.151263Z",
            "name": "CVE-2019-6250",
            "description": "A pointer overflow, with code execution, was discovered in ZeroMQ libzmq (aka 0MQ) 4.2.x and 4.3.x before 4.3.1. A v2_decoder.cpp zmq::v2_decoder_t::size_ready integer overflow allows an authenticated attacker to overwrite an arbitrary amount of bytes beyond the bounds of a buffer, which can be leveraged to run arbitrary code on the target system. The memory layout allows the attacker to inject OS commands into a data structure located immediately after the problematic buffer (i.e., it is not necessary to use a typical buffer-overflow exploitation technique that changes the flow of control).",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2019-6250"
                }
            ],
            "object_marking_refs": [
                "marking-definition--62fd3f9b-15f3-4ebc-802c-91fce9536bcf"
            ]
        }
    ]
}