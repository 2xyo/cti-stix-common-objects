{
    "type": "bundle",
    "id": "bundle--66c14710-f56f-4e6e-8a5c-60850010325e",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--8eb6c38e-3cf0-4dad-a641-ad691baff71d",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2021-03-13T20:11:44.395021Z",
            "modified": "2021-03-13T20:11:44.395021Z",
            "name": "CVE-2019-3901",
            "description": "A race condition in perf_event_open() allows local attackers to leak sensitive data from setuid programs. As no relevant locks (in particular the cred_guard_mutex) are held during the ptrace_may_access() call, it is possible for the specified target task to perform an execve() syscall with setuid execution before perf_event_alloc() actually attaches to it, allowing an attacker to bypass the ptrace_may_access() check and the perf_event_exit_task(current) call that is performed in install_exec_creds() during privileged execve() calls. This issue affects kernel versions before 4.8.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2019-3901"
                }
            ],
            "object_marking_refs": [
                "marking-definition--62fd3f9b-15f3-4ebc-802c-91fce9536bcf"
            ]
        }
    ]
}