{
    "type": "bundle",
    "id": "bundle--8a7ef9c3-2c63-47cc-b19d-82e021017aca",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--dfbadfa5-7e47-45c8-9436-b4754d5dcf83",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2021-03-13T20:13:16.083048Z",
            "modified": "2021-03-13T20:13:16.083048Z",
            "name": "CVE-2018-18281",
            "description": "Since Linux kernel version 3.2, the mremap() syscall performs TLB flushes after dropping pagetable locks. If a syscall such as ftruncate() removes entries from the pagetables of a task that is in the middle of mremap(), a stale TLB entry can remain for a short time that permits access to a physical page after it has been released back to the page allocator and reused. This is fixed in the following kernel versions: 4.9.135, 4.14.78, 4.18.16, 4.19.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2018-18281"
                }
            ],
            "object_marking_refs": [
                "marking-definition--62fd3f9b-15f3-4ebc-802c-91fce9536bcf"
            ]
        }
    ]
}