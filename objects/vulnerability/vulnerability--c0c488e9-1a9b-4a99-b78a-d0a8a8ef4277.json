{
    "type": "bundle",
    "id": "bundle--b9a01d84-31e9-452d-87c6-14b5f44fbdd5",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--c0c488e9-1a9b-4a99-b78a-d0a8a8ef4277",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2021-03-13T20:12:26.537008Z",
            "modified": "2021-03-13T20:12:26.537008Z",
            "name": "CVE-2020-15168",
            "description": "node-fetch before versions 2.6.1 and 3.0.0-beta.9 did not honor the size option after following a redirect, which means that when a content size was over the limit, a FetchError would never get thrown and the process would end without failure. For most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don't double-check the size of the data after fetch() has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2020-15168"
                }
            ],
            "object_marking_refs": [
                "marking-definition--62fd3f9b-15f3-4ebc-802c-91fce9536bcf"
            ]
        }
    ]
}